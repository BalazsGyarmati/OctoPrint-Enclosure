<form class="form-horizontal"> 

  <div class="control-group">
    <label class="control-label">{{ _('Action Type') }}</label>
    <div class="controls">
      <input type="radio" name="action_type_radio"  value="output_control" data-bind="checked: inputEditor.action_type"> {{ _('Output Control') }}
    </div>
    <div class="controls">
      <input type="radio" name="action_type_radio"  value="printer_control" data-bind="checked: inputEditor.action_type"> {{ _('Printer') }}
    </div>
  </div>


  <!-- ko if: (inputEditor.action_type() == "printer_control")  -->
  <div class="control-group">
    <div class="controls">
        <span class="help-inline">
            <span class="label label-info">Info:</span> PRINTER actions when a condition is met, that can be a
            filament sensor, button, etc. Actions can
            be Pause \ Resume \ Cancel a printer_control job, change the filament or disable Temperature Control.
            You can
            use the "change filament" action and set up the input GPIO according to your sensor, for example, if your
            filament
            sensor connects to ground when detects the end of the filament, you should choose PULL UP resistors and
            detect
            the event on the falling edge.
        </span>
    </div>
</div>
<!-- /ko -->

<!-- ko if: (inputEditor.action_type() == "output_control")  -->
<div class="control-group">
    <div class="controls">
        <span class="help-inline">
            <span class="label label-info">Info:</span> Action will control GPIO outputs when a condition is met,
            for example detect a press of a button.
            You can use this to control any previous configured OUTPUTS, basically being able to control your
            lights / fan
            / printer using mechanical buttons buttons instead of the Octoprint interface. You can only control
            REGULAR outputs.
        </span>
    </div>
</div>

<div class="control-group">
    <label class="control-label"> Controlled IO</label>
    <div class="controls">
        <select >
        </select>
        <span class="help-inline">When the event happen, you want control which OUTPUT?</span>
    </div>
</div>
<!-- ko_comment if: ($root.isRegularOutput($data.controlled_io()))  -->
<div class="control-group">
    <label class="control-label">Set Controlled IO Value</label>
    <div class="controls">
        <select data-bind="value: inputEditor.controlled_io_set_value">
            <option value="low">Low</option>
            <option value="high">High</option>
            <option value="toggle">Toggle</option>
        </select>
        <span class="help-inline">When the event happen, you want to turn the controlled IO HIGH or LOW?</span>
    </div>
</div>
<!-- /ko_comment -->

<!-- /ko -->


<!-- ko if: (inputEditor.action_type() == "printer_control")  -->
<div class="control-group">
    <label class="control-label">{{ _('Printer Action') }}</label>
    <div class="controls">
      <select data-bind="value: inputEditor.printer_action">
        <option value="filament">Filament Change</option>
        <option value="resume">Printer Resume</option>
        <option value="pause">Printer Pause</option>
        <option value="cancel">Printer Cancel</option>
        <option value="start">Start Print</option>
        <option value="toggle">Printer Toggle (Connect / Pause / Resume)</option>
        <option value="toggle_job">Job Toggle (Connect / Start / Cancel)</option>
        <option value="stop_temp_hum_control">Stop Temperature Control</option>
      </select>
      <span class="help-inline"> You can use filament change on your filament detectors and add buttons to resume and pause the print job.</span>
    </div>
  </div>
  <!-- ko if: (inputEditor.printer_action() == "filament") -->
  <div class="control-group">
    <div class="controls">
      <label class="checkbox">
        <input type="checkbox" data-bind="checked: inputEditor.filament_sensor_enabled"> {{ _('Enable') }}
      </label>
      <span class="help-inline">Enable and disable filament sensors</span>
    </div>
  </div>
  <div class="control-group">
    <label class="control-label">{{ _('Filament detection timeout') }}</label>
    <div class="controls">
      <input type="text" class="input-block-level" data-bind="value: inputEditor.filament_sensor_timeout">
      <span class="help-inline">Time in seconds that filament sensor will be inactive after sensing end of filament. This is to avoid sending multiple
        commands to the printer.
      </span>
    </div>
  </div>
  <!-- /ko -->
<!-- /ko -->


</form>